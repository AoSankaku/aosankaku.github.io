{"version":3,"file":"component---src-pages-index-tsx-8974f096b989fe95224b.js","mappings":"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","sources":["webpack://gatsby-starter-apple/../src/image-utils.ts","webpack://gatsby-starter-apple/../src/components/hooks.ts","webpack://gatsby-starter-apple/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-apple/../src/components/picture.tsx","webpack://gatsby-starter-apple/../src/components/placeholder.tsx","webpack://gatsby-starter-apple/../src/components/main-image.tsx","webpack://gatsby-starter-apple/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-apple/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-apple/../src/components/static-image.server.tsx","webpack://gatsby-starter-apple/../src/components/static-image.tsx","webpack://gatsby-starter-apple/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://gatsby-starter-apple/./src/components/postGrid/card/centeredImg.tsx","webpack://gatsby-starter-apple/./src/components/postGrid/card/card.tsx","webpack://gatsby-starter-apple/./src/components/postGrid/card/index.ts","webpack://gatsby-starter-apple/./src/components/postGrid/useInfiniteScroll.ts","webpack://gatsby-starter-apple/./src/components/postGrid/postGrid.tsx","webpack://gatsby-starter-apple/./src/components/postGrid/index.ts","webpack://gatsby-starter-apple/./src/components/catetgoryFilter/useScrollCenter.ts","webpack://gatsby-starter-apple/./src/components/catetgoryFilter/categoryFilter.tsx","webpack://gatsby-starter-apple/./src/components/catetgoryFilter/index.ts","webpack://gatsby-starter-apple/./src/components/home.tsx","webpack://gatsby-starter-apple/./src/pages/index.tsx","webpack://gatsby-starter-apple/./src/styles/category.ts","webpack://gatsby-starter-apple/./src/styles/dateTime.ts","webpack://gatsby-starter-apple/./node_modules/lodash/_asciiWords.js","webpack://gatsby-starter-apple/./node_modules/lodash/_basePropertyOf.js","webpack://gatsby-starter-apple/./node_modules/lodash/_createCompounder.js","webpack://gatsby-starter-apple/./node_modules/lodash/_deburrLetter.js","webpack://gatsby-starter-apple/./node_modules/lodash/_hasUnicodeWord.js","webpack://gatsby-starter-apple/./node_modules/lodash/_unicodeWords.js","webpack://gatsby-starter-apple/./node_modules/lodash/deburr.js","webpack://gatsby-starter-apple/./node_modules/lodash/kebabCase.js","webpack://gatsby-starter-apple/./node_modules/lodash/words.js"],"sourcesContent":["import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import React, { useMemo } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\nimport type { IGatsbyImageData } from \"gatsby-plugin-image\"\r\n\r\nimport type Post from \"Types/Post\"\r\n\r\ninterface CenteredImgProps extends Pick<Post, \"alt\"> {\r\n  src: Post[\"thumbnail\"]\r\n}\r\n\r\nconst DEFAULT_ALT = \"Thumbnail Image\"\r\n\r\nconst CenteredImg: React.FC<CenteredImgProps> = ({ src, alt }) => {\r\n  const data = useStaticQuery<Queries.Query>(graphql`\r\n    query CenteredImg {\r\n      allImageSharp {\r\n        edges {\r\n          node {\r\n            id\r\n            gatsbyImageData(\r\n              layout: CONSTRAINED\r\n              aspectRatio: 1.77\r\n              placeholder: BLURRED\r\n            )\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const image = useMemo(() => {\r\n    const imageSharp = data.allImageSharp.edges.find(\r\n      edge => edge.node.id === src\r\n    )\r\n    return imageSharp?.node.gatsbyImageData as IGatsbyImageData\r\n  }, [src, data.allImageSharp.edges])\r\n\r\n  return (\r\n    <ThumbnailWrapper>\r\n      <InnerWrapper>\r\n        <GatsbyImage image={image} loading=\"eager\" alt={alt ?? DEFAULT_ALT} />\r\n      </InnerWrapper>\r\n    </ThumbnailWrapper>\r\n  )\r\n}\r\n\r\nexport const ThumbnailWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  &::after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: 0;\r\n    background-color: var(--color-dimmed);\r\n    transition: 0.3s ease;\r\n  }\r\n`\r\n\r\nconst InnerWrapper = styled.div`\r\n  overflow: hidden;\r\n`\r\n\r\nexport default React.memo(CenteredImg)\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nimport type Post from \"Types/Post\"\r\nimport Category from \"Styles/category\"\r\nimport DateTime from \"Styles/dateTime\"\r\nimport CenteredImg from \"./centeredImg\"\r\n\r\ntype CardProps = Pick<\r\n  Post,\r\n  \"thumbnail\" | \"alt\" | \"category\" | \"title\" | \"desc\" | \"date\"\r\n>\r\n\r\nconst Card: React.FC<CardProps> = ({\r\n  thumbnail,\r\n  alt,\r\n  category,\r\n  title,\r\n  desc,\r\n  date,\r\n}) => {\r\n  return (\r\n    <Wrapper>\r\n      <CenteredImg src={thumbnail} alt={alt} />\r\n      <Text>\r\n        <div>\r\n          <Category>{category}</Category>\r\n          <Title>{title}</Title>\r\n          <Desc>{desc}</Desc>\r\n        </div>\r\n        <DateTime dateTime={date}>{date}</DateTime>\r\n      </Text>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  height: 100%;\r\n  border-radius: var(--border-radius-base);\r\n  background-color: var(--color-card);\r\n\r\n  /* Fix Safari overflow:hidden with border radius not working error */\r\n  transform: translateZ(0);\r\n`\r\n\r\nconst Text = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1 1 auto;\r\n  justify-content: space-between;\r\n  padding: var(--sizing-md);\r\n\r\n  & > * {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Title = styled.h3`\r\n  margin-top: var(--sizing-xs);\r\n  font-size: var(--text-lg);\r\n  font-weight: var(--font-weight-bold);\r\n  line-height: 1.3;\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.md}) {\r\n    font-size: 1.3125rem;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    font-size: var(--text-md);\r\n  }\r\n`\r\n\r\nconst Desc = styled.p`\r\n  line-height: 1.5;\r\n  margin-top: 8px;\r\n  padding-bottom: var(--sizing-sm);\r\n  color: var(--color-text-2);\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  word-break: break-word;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nexport default React.memo(Card)\r\n","import Card from \"./card\"\r\n\r\nexport default Card\r\n","import { useState, useEffect, useLayoutEffect, useRef } from \"react\"\r\n\r\nimport type Post from \"Types/Post\"\r\n\r\ninterface UseInfiniteScrollProps {\r\n  posts: Post[]\r\n  scrollEdgeRef: React.RefObject<HTMLDivElement>\r\n  maxPostNum: number\r\n  offsetY: number\r\n}\r\n\r\nconst useInfiniteScroll = ({\r\n  posts,\r\n  scrollEdgeRef,\r\n  maxPostNum = 10,\r\n  offsetY = 400,\r\n}: UseInfiniteScrollProps) => {\r\n  const [hasMore, setHasMore] = useState(false)\r\n  const [currentList, setCurrentList] = useState<Post[]>([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [observerLoading, setObserverLoading] = useState(false)\r\n\r\n  const observer = useRef<IntersectionObserver>()\r\n\r\n  useLayoutEffect(() => {\r\n    if (!posts.length || isLoading) return\r\n    setHasMore(posts.length > maxPostNum)\r\n    setCurrentList([...posts.slice(0, maxPostNum)])\r\n    setIsLoading(true)\r\n  }, [isLoading, posts, maxPostNum])\r\n\r\n  useEffect(() => {\r\n    const loadEdges = () => {\r\n      const currentLength = currentList.length\r\n      const more = currentLength < posts.length\r\n      const nextEdges = more\r\n        ? posts.slice(currentLength, currentLength + maxPostNum)\r\n        : []\r\n      setHasMore(more)\r\n      setCurrentList([...currentList, ...nextEdges])\r\n    }\r\n\r\n    const scrollEdgeElem = scrollEdgeRef.current\r\n\r\n    const option = {\r\n      rootMargin: `0px 0px ${offsetY}px 0px`,\r\n      threshold: [0],\r\n    }\r\n\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (!hasMore) return\r\n      entries.forEach(entry => {\r\n        if (!observerLoading) {\r\n          setObserverLoading(true)\r\n          return\r\n        }\r\n        if (entry.isIntersecting) loadEdges()\r\n      })\r\n    }, option)\r\n\r\n    observer.current.observe(scrollEdgeElem!)\r\n\r\n    return () => observer.current && observer.current.disconnect()\r\n  })\r\n\r\n  return currentList\r\n}\r\n\r\nexport default useInfiniteScroll\r\n","import React, { useRef } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport styled from \"styled-components\"\r\n\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nimport type Post from \"Types/Post\"\r\nimport Card from \"./card\"\r\nimport useInfiniteScroll from \"./useInfiniteScroll\"\r\nimport { ThumbnailWrapper } from \"./card/centeredImg\"\r\n\r\ninterface PostGridProps {\r\n  posts: Post[]\r\n}\r\n\r\nconst PostGrid: React.FC<PostGridProps> = ({ posts }) => {\r\n  const scrollEdgeRef = useRef<HTMLDivElement>(null)\r\n  const currentList = useInfiniteScroll({\r\n    posts,\r\n    scrollEdgeRef,\r\n    maxPostNum: 10,\r\n    offsetY: 200,\r\n  })\r\n\r\n  return (\r\n    <Grid role=\"list\">\r\n      {currentList.map(data => {\r\n        const { id, slug, title, desc, date, category, thumbnail, alt } = data\r\n        const defaultSEOImageId = useStaticQuery<Queries.Query>(graphql`\r\n        query MyQuery {\r\n          file(absolutePath: {regex: \"/og-default.png/\"}) {\r\n            childImageSharp {\r\n              id\r\n            }\r\n          }\r\n        }\r\n        `)\r\n        const ariaLabel = `${title} - ${category} - Posted on ${date}`\r\n        return (\r\n          <List key={id} role=\"listitem\">\r\n            <Link to={slug ?? \"\"} aria-label={ariaLabel}>\r\n              <Card\r\n                thumbnail={thumbnail ? thumbnail : defaultSEOImageId!.file!.childImageSharp!.id}\r\n                alt={alt}\r\n                category={category}\r\n                title={title}\r\n                desc={desc}\r\n                date={date}\r\n              />\r\n            </Link>\r\n          </List>\r\n        )\r\n      })}\r\n      <div ref={scrollEdgeRef} />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst Grid = styled.ul`\r\n  display: grid;\r\n  grid-gap: var(--grid-gap-xl);\r\n  grid-template-columns: repeat(2, 1fr);\r\n  list-style: none;\r\n\r\n  & > li {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    grid-gap: var(--grid-gap-lg);\r\n  }\r\n`\r\n\r\nconst List = styled.li`\r\n  box-sizing: border-box;\r\n  grid-column: span 1;\r\n\r\n  a {\r\n    display: block;\r\n    height: 100%;\r\n  }\r\n\r\n  a:hover ${ThumbnailWrapper}::after, a:focus ${ThumbnailWrapper}::after {\r\n    opacity: 1;\r\n  }\r\n\r\n  & .gatsby-image-wrapper {\r\n    transition: opacity 1s ease-out, transform 0.5s ease;\r\n  }\r\n\r\n  a:hover,\r\n  a:focus {\r\n    .gatsby-image-wrapper {\r\n      transform: scale(1.03);\r\n    }\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    grid-column: span 2;\r\n  }\r\n`\r\n\r\nexport default PostGrid\r\n","import PostGrid from \"./postGrid\"\r\n\r\nexport default PostGrid\r\n","import { useLayoutEffect } from \"react\"\r\n\r\ninterface UseScrollCenterProps {\r\n  ref: React.RefObject<HTMLUListElement>\r\n  targetId: string\r\n}\r\n\r\nconst useScrollCenter = ({ ref, targetId }: UseScrollCenterProps) => {\r\n  useLayoutEffect(() => {\r\n    const categoryWrapEl = ref.current\r\n\r\n    if (!categoryWrapEl) {\r\n      return\r\n    }\r\n\r\n    const isScrollActivated =\r\n      categoryWrapEl.scrollWidth >= categoryWrapEl.offsetWidth\r\n\r\n    if (!isScrollActivated) {\r\n      return\r\n    }\r\n\r\n    const activeCategoryEl = categoryWrapEl.querySelector<HTMLUListElement>(\r\n      `#${targetId}`\r\n    )\r\n\r\n    if (!activeCategoryEl) {\r\n      return\r\n    }\r\n\r\n    const offsetX = activeCategoryEl.offsetLeft - categoryWrapEl.offsetLeft\r\n    categoryWrapEl.scrollTo(\r\n      offsetX -\r\n      categoryWrapEl.offsetWidth / 2 +\r\n      activeCategoryEl.offsetWidth / 2,\r\n      0\r\n    )\r\n  }, [ref, targetId])\r\n}\r\n\r\nexport default useScrollCenter\r\n","import React, { useRef, useMemo } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport type { GatsbyLinkProps } from \"gatsby\"\r\nimport styled from \"styled-components\"\r\nimport kebabCase from \"lodash/kebabCase\"\r\n\r\nimport useScrollCenter from \"./useScrollCenter\"\r\n\r\nconst ACTIVE = \"active\"\r\nconst ALL_CATEGORY_NAME = \"All\"\r\n\r\ninterface CategoryFilterProps {\r\n  categoryList: readonly Queries.MarkdownRemarkGroupConnection[]\r\n}\r\n\r\ntype LinkPropsGetter = GatsbyLinkProps<unknown>[\"getProps\"]\r\n\r\nconst CategoryFilter: React.FC<CategoryFilterProps> = ({ categoryList }) => {\r\n  const categoryRef = useRef<HTMLUListElement>(null)\r\n  const isActive: LinkPropsGetter = ({ isCurrent }) =>\r\n    isCurrent ? { id: ACTIVE, tabIndex: -1 } : {}\r\n\r\n  useScrollCenter({ ref: categoryRef, targetId: ACTIVE })\r\n\r\n  const sortedCategoryList = useMemo(\r\n    () => [...categoryList].sort((a, b) => b.totalCount - a.totalCount),\r\n    [categoryList]\r\n  )\r\n\r\n  return (\r\n    <Nav aria-label=\"Category Filter\">\r\n      <CategoryTitle>Category</CategoryTitle>\r\n      <CategoryButton getProps={isActive} to=\"/\">\r\n        {ALL_CATEGORY_NAME}\r\n      </CategoryButton>\r\n      <Divider />\r\n      <CategoryUl ref={categoryRef} className=\"invisible-scrollbar\">\r\n        {sortedCategoryList.map(category => {\r\n          const { fieldValue } = category\r\n          return (\r\n            <li key={fieldValue}>\r\n              <CategoryButton\r\n                getProps={isActive}\r\n                to={`/category/${kebabCase(fieldValue!)}/`}\r\n              >\r\n                {fieldValue}\r\n              </CategoryButton>\r\n            </li>\r\n          )\r\n        })}\r\n      </CategoryUl>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: var(--color-card);\r\n  margin-bottom: 48px;\r\n  padding: 12px var(--sizing-md);\r\n  border-radius: var(--border-radius-base);\r\n\r\n  a#active {\r\n    color: var(--color-white);\r\n    background-color: var(--color-blue);\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    padding: 12px;\r\n  }\r\n`\r\n\r\nconst CategoryTitle = styled.em`\r\n  position: static;\r\n  width: auto;\r\n  height: auto;\r\n  clip: auto;\r\n  white-space: auto;\r\n\r\n  flex-shrink: 0;\r\n  font-size: var(--text-base);\r\n  font-weight: var(--font-weight-semi-bold);\r\n  font-style: initial;\r\n  margin-right: var(--sizing-lg);\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    overflow: hidden;\r\n    clip: rect(1px, 1px, 1px, 1px);\r\n    white-space: no-wrap;\r\n  }\r\n`\r\n\r\nconst CategoryButton = styled(Link)`\r\n  cursor: pointer;\r\n  display: block;\r\n  background-color: var(--color-category-button);\r\n  padding: var(--sizing-sm) var(--sizing-base);\r\n  border-radius: var(--border-radius-base);\r\n  font-size: 0.875rem;\r\n  font-weight: var(--font-weight-semi-bold);\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:hover {\r\n    color: var(--color-white);\r\n    background-color: var(--color-blue);\r\n  }\r\n\r\n  &:focus-visible {\r\n    color: var(--color-white);\r\n    background-color: var(--color-blue);\r\n  }\r\n`\r\n\r\nconst Divider = styled.div`\r\n  width: 1px;\r\n  height: 32px;\r\n  margin: 0 var(--sizing-sm);\r\n  transform: translateX(-50%);\r\n  background-color: var(--color-divider);\r\n`\r\n\r\nconst CategoryUl = styled.ul`\r\n  display: flex;\r\n  list-style: none;\r\n  overflow-x: scroll;\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n\r\n  li + li {\r\n    margin-left: 6px;\r\n  }\r\n`\r\n\r\nexport default CategoryFilter\r\n","import CategoryFilter from \"./categoryFilter\"\r\n\r\nexport default CategoryFilter\r\n","import React from \"react\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport styled from \"styled-components\"\r\n\r\nimport Markdown from \"Styles/markdown\"\r\nimport { rhythm } from \"Styles/typography\"\r\n\r\nconst HomeDescription = () => {\r\n  const data = useStaticQuery<Queries.Query>(graphql`\r\n    query HomeDescription {\r\n      allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/home/\" } }) {\r\n        edges {\r\n          node {\r\n            html\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const markdown = data.allMarkdownRemark.edges[0].node.html\r\n\r\n  return (\r\n    <Container\r\n      dangerouslySetInnerHTML={{ __html: markdown ?? \"\" }}\r\n      rhythm={rhythm}\r\n    ></Container>\r\n  )\r\n}\r\n\r\nconst Container = styled(Markdown).attrs({\r\n  as: \"main\",\r\n})`\r\n  width: var(--post-width);\r\n  margin: 0 auto;\r\n  margin-top: 80px;\r\n  margin-bottom: 6rem;\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    margin-top: var(--sizing-xl);\r\n    width: 87.5%;\r\n  }\r\n\r\n  h1 {\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  h2 {\r\n    margin-top: var(--sizing-lg);\r\n\r\n    @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n      font-size: 1.75rem;\r\n    }\r\n  }\r\n\r\n  h3 {\r\n    @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n      font-size: 1.25rem;\r\n    }\r\n  }\r\n`\r\n\r\nexport default HomeDescription\r\n","import React, { useState, useLayoutEffect } from \"react\"\r\nimport type { PageProps } from \"gatsby\"\r\nimport { graphql } from \"gatsby\"\r\nimport styled from \"styled-components\"\r\n\r\nimport type Post from \"Types/Post\"\r\nimport useSiteMetadata from \"Hooks/useSiteMetadata\"\r\nimport Layout from \"Layouts/layout\"\r\nimport SEO from \"Components/seo\"\r\nimport PostGrid from \"Components/postGrid\"\r\nimport CategoryFilter from \"Components/catetgoryFilter\"\r\n\r\nimport HomeDescription from \"Components/home\"\r\n\r\nconst Home = ({\r\n  pageContext,\r\n  data,\r\n}: PageProps<Queries.Query, Queries.MarkdownRemarkFrontmatter>) => {\r\n  const [posts, setPosts] = useState<Post[]>([])\r\n  const currentCategory = pageContext.category\r\n  const postData = data.allMarkdownRemark.edges\r\n\r\n  useLayoutEffect(() => {\r\n    const filteredPostData = currentCategory\r\n      ? postData.filter(\r\n        ({ node }) => node?.frontmatter?.category === currentCategory\r\n      )\r\n      : postData\r\n\r\n    filteredPostData.forEach(({ node }) => {\r\n      const { id } = node\r\n      const { slug } = node.fields!\r\n      const { title, desc, date, category, thumbnail, alt } = node.frontmatter!\r\n      const { childImageSharp } = thumbnail ? thumbnail! : {}\r\n\r\n      setPosts(prevPost => [\r\n        ...prevPost,\r\n        {\r\n          id,\r\n          slug,\r\n          title,\r\n          desc,\r\n          date,\r\n          category,\r\n          thumbnail: childImageSharp?.id,\r\n          alt,\r\n        },\r\n      ])\r\n    })\r\n  }, [currentCategory, postData])\r\n\r\n  const site = useSiteMetadata()\r\n  const postTitle = currentCategory || site.postTitle\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" />\r\n      <Main>\r\n        <Content>\r\n          {!currentCategory ? <HomeDescription /> : null}\r\n          <CategoryFilter categoryList={data.allMarkdownRemark.group} />\r\n          <PostTitle>{postTitle}</PostTitle>\r\n          <PostGrid posts={posts} />\r\n        </Content>\r\n      </Main>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst Main = styled.main`\r\n  min-width: var(--min-width);\r\n  min-height: calc(100vh - var(--nav-height) - var(--footer-height));\r\n  background-color: var(--color-background);\r\n`\r\n\r\nconst Content = styled.div`\r\n  box-sizing: content-box;\r\n  width: 87.5%;\r\n  max-width: var(--width);\r\n  padding-top: var(--sizing-lg);\r\n  padding-bottom: var(--sizing-lg);\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    padding-top: var(--grid-gap-lg);\r\n    width: 87.5%;\r\n  }\r\n`\r\n\r\nconst PostTitle = styled.h2`\r\n  font-size: 2rem;\r\n  font-weight: var(--font-weight-extra-bold);\r\n  margin-bottom: var(--sizing-md);\r\n  line-height: 1.21875;\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    font-size: 1.75rem;\r\n  }\r\n`\r\n\r\nexport const query = graphql`\r\n  query Home {\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/(posts/blog)/\" } }\r\n      limit: 2000\r\n      sort: { frontmatter: { date: DESC } }\r\n    ) {\r\n      group(field: { frontmatter: { category: SELECT } }) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            category\r\n            date(formatString: \"YYYY-MM-DD\")\r\n            desc\r\n            thumbnail {\r\n              childImageSharp {\r\n                id\r\n              }\r\n              base\r\n            }\r\n            alt\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Home\r\n","import styled from \"styled-components\"\r\n\r\nconst Category = styled.span`\r\n  display: block;\r\n  font-size: 0.875rem;\r\n  font-weight: var(--font-weight-semi-bold);\r\n  color: var(--color-text-3);\r\n`\r\n\r\nexport default Category\r\n","import styled from \"styled-components\"\r\n\r\nconst DateTime = styled.time`\r\n  margin-top: 12px;\r\n  font-size: 0.875rem;\r\n  font-weight: var(--font-weight-regular);\r\n  color: var(--color-text-3);\r\n`\r\n\r\nexport default DateTime\r\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n"],"names":["j","hasNativeLazyLoadSupport","HTMLImageElement","prototype","_","e","t","a","i","s","width","height","className","style","O","h","loading","shouldLoad","opacity","z","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","P","A","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","q","children","u","H","F","G","srcSet","decoding","V","fallback","sources","sizes","length","map","_ref6","media","type","key","B","propTypes","displayName","U","Y","Error","X","J","Z","K","replace","Q","_len","arguments","Array","_key","c","concat","ee","image","te","ae","ie","Set","se","re","ne","as","class","g","onStartLoad","p","onLoad","m","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","oe","le","de","__imageData","__error","console","warn","ce","imgClassName","imgStyle","placeholder","he","_len2","_key2","ue","ge","pe","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","x","trim","filter","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","preserveCamelCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","lastIndex","m1","charAt","postProcess","identifier","module","exports","CenteredImg","_ref","data","useStaticQuery","useMemo","imageSharp","allImageSharp","edges","find","edge","node","id","gatsbyImageData","React","ThumbnailWrapper","InnerWrapper","GatsbyImage","styled","componentId","Card","thumbnail","category","title","desc","date","Wrapper","Text","Category","Title","Desc","DateTime","dateTime","_ref2","theme","device","md","_ref3","sm","posts","scrollEdgeRef","maxPostNum","offsetY","hasMore","setHasMore","useState","currentList","setCurrentList","setIsLoading","observerLoading","setObserverLoading","observer","useRef","useLayoutEffect","_toConsumableArray","useEffect","scrollEdgeElem","option","rootMargin","threshold","IntersectionObserver","entries","forEach","entry","isIntersecting","loadEdges","currentLength","more","nextEdges","observe","disconnect","Grid","List","useInfiniteScroll","slug","defaultSEOImageId","ariaLabel","Link","to","file","childImageSharp","targetId","categoryWrapEl","scrollWidth","offsetWidth","activeCategoryEl","offsetX","offsetLeft","scrollTo","ACTIVE","Nav","CategoryTitle","_ref4","CategoryButton","withConfig","Divider","CategoryUl","categoryList","categoryRef","isActive","isCurrent","tabIndex","useScrollCenter","sortedCategoryList","sort","totalCount","getProps","fieldValue","kebabCase","Container","Markdown","attrs","HomeDescription","markdown","allMarkdownRemark","html","rhythm","Main","Content","PostTitle","pageContext","setPosts","currentCategory","postData","_node$frontmatter","frontmatter","fields","prevPost","site","useSiteMetadata","postTitle","Layout","SEO","CategoryFilter","group","PostGrid","reAsciiWord","match","object","undefined","arrayReduce","deburr","words","reApos","callback","deburrLetter","basePropertyOf","reHasUnicodeWord","rsAstralRange","rsDingbatRange","rsLowerRange","rsUpperRange","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsModifier","rsOptVar","rsSeq","rsEmoji","reUnicodeWord","toString","reLatin","reComboMark","createCompounder","result","word","index","asciiWords","hasUnicodeWord","unicodeWords","pattern","guard"],"sourceRoot":""}